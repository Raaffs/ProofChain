// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package verify

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerifyMetaData contains all meta data concerning the Verify contract.
var VerifyMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfshash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"verifier\",\"type\":\"string\"}],\"name\":\"approveVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"verifier\",\"type\":\"string\"}],\"name\":\"checkVerifierStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"verifier\",\"type\":\"string\"}],\"name\":\"getDocumentList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"requester\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"verifer\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"name\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"ipfs\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"desc\",\"type\":\"string[]\"},{\"internalType\":\"enumVerification.DocStatus[]\",\"name\":\"stats\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"userDocId\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"verifier\",\"type\":\"string\"}],\"name\":\"getDocumentsForVerifier\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"requester\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"verifer\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"name\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"ipfs\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"desc\",\"type\":\"string[]\"},{\"internalType\":\"enumVerification.DocStatus[]\",\"name\":\"stats\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"}],\"name\":\"registerAsUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_aadharNum\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_institute\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_verifierAddr\",\"type\":\"string\"}],\"name\":\"registerAsVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"verifiers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"AadharNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"institute\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isApprovedVerifier\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfs\",\"type\":\"string\"},{\"internalType\":\"enumVerification.DocStatus\",\"name\":\"_status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"verifier\",\"type\":\"string\"}],\"name\":\"verifyDocuments\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "0x60806040526000600b5534801561001557600080fd5b5033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d09806100666000396000f3fe6080604052600436106100915760003560e01c8063aa5e218111610059578063aa5e218114610172578063ac205deb146101b4578063ba785725146101f5578063e95e52081461021e578063ec53def11461024757610091565b806313559331146100965780631e9b1312146100d957806320857a9f1461010457806336a8915b1461012d578063535c53e714610156575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190612069565b610284565b6040516100d09796959493929190612791565b60405180910390f35b3480156100e557600080fd5b506100ee610c15565b6040516100fb91906126eb565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190611ff4565b610c3b565b005b34801561013957600080fd5b50610154600480360381019061014f9190612129565b610db2565b005b610170600480360381019061016b91906120aa565b6112cc565b005b34801561017e57600080fd5b5061019960048036038101906101949190612069565b611559565b6040516101ab96959493929190612706565b60405180910390f35b3480156101c057600080fd5b506101db60048036038101906101d69190612069565b611a27565b6040516101ec95949392919061284c565b60405180910390f35b34801561020157600080fd5b5061021c60048036038101906102179190612069565b611ca0565b005b34801561022a57600080fd5b50610245600480360381019061024091906121c0565b611d6d565b005b34801561025357600080fd5b5061026e60048036038101906102699190612069565b611e53565b60405161027b9190612831565b60405180910390f35b606080606080606080606060008860405161029f91906126d4565b908152602001604051809103902060040160009054906101000a900460ff16156107885760056006600760096008600a600067ffffffffffffffff811115610310577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561033e5781602001602082028036833780820191505090505b50868054806020026020016040519081016040528092919081815260200182805480156103c057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610376575b505050505096508580548060200260200160405190810160405280929190818152602001828054801561044857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103fe575b5050505050955084805480602002602001604051908101604052809291908181526020016000905b8282101561051c57838290600052602060002001805461048f90612b67565b80601f01602080910402602001604051908101604052809291908181526020018280546104bb90612b67565b80156105085780601f106104dd57610100808354040283529160200191610508565b820191906000526020600020905b8154815290600101906020018083116104eb57829003601f168201915b505050505081526020019060010190610470565b50505050945083805480602002602001604051908101604052809291908181526020016000905b828210156105ef57838290600052602060002001805461056290612b67565b80601f016020809104026020016040519081016040528092919081815260200182805461058e90612b67565b80156105db5780601f106105b0576101008083540402835291602001916105db565b820191906000526020600020905b8154815290600101906020018083116105be57829003601f168201915b505050505081526020019060010190610543565b50505050935082805480602002602001604051908101604052809291908181526020016000905b828210156106c257838290600052602060002001805461063590612b67565b80601f016020809104026020016040519081016040528092919081815260200182805461066190612b67565b80156106ae5780601f10610683576101008083540402835291602001916106ae565b820191906000526020600020905b81548152906001019060200180831161069157829003601f168201915b505050505081526020019060010190610616565b5050505092508180548060200260200160405190810160405280929190818152602001828054801561076e57602002820191906000526020600020906000905b82829054906101000a900460ff166002811115610748577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116107025790505b505050505091509650965096509650965096509650610c0a565b600560066007600067ffffffffffffffff8111156107cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561080257816020015b60608152602001906001900390816107ed5790505b506008600a600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020868054806020026020016040519081016040528092919081815260200182805480156108c757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161087d575b505050505096508580548060200260200160405190810160405280929190818152602001828054801561094f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610905575b5050505050955084805480602002602001604051908101604052809291908181526020016000905b82821015610a2357838290600052602060002001805461099690612b67565b80601f01602080910402602001604051908101604052809291908181526020018280546109c290612b67565b8015610a0f5780601f106109e457610100808354040283529160200191610a0f565b820191906000526020600020905b8154815290600101906020018083116109f257829003601f168201915b505050505081526020019060010190610977565b50505050945082805480602002602001604051908101604052809291908181526020016000905b82821015610af6578382906000526020600020018054610a6990612b67565b80601f0160208091040260200160405190810160405280929190818152602001828054610a9590612b67565b8015610ae25780601f10610ab757610100808354040283529160200191610ae2565b820191906000526020600020905b815481529060010190602001808311610ac557829003601f168201915b505050505081526020019060010190610a4a565b50505050925081805480602002602001604051908101604052809291908181526020018280548015610ba257602002820191906000526020600020906000905b82829054906101000a900460ff166002811115610b7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020019060010190602082600001049283019260010382029150808411610b365790505b5050505050915080805480602002602001604051908101604052809291908181526020018280548015610bf457602002820191906000526020600020905b815481526020019060010190808311610be0575b5050505050905096509650965096509650965096505b919395979092949650565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806040016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610d33929190611e8a565b506020820151816001019080519060200190610d50929190611e8a565b509050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506001151581151514610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e419061291b565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001868152602001848152602001858152602001600b548152602001600280811115610ee3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250905080600285604051610ef991906126d4565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610fb1929190611e8a565b506060820151816003019080519060200190610fce929190611e8a565b506080820151816004019080519060200190610feb929190611e8a565b5060a0820151816005015560c08201518160060160006101000a81548160ff02191690836002811115611047577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b5490806001815401808255809150506001900390600052602060002001600090919091909150556005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506007859080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906111b9929190611e8a565b506008839080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906111f5929190611e8a565b50600984908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190611231929190611e8a565b50600a600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff021916908360028111156112a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600b60008154809291906112c090612b99565b91905055505050505050565b600115156000826040516112e091906126d4565b908152602001604051809103902060040160009054906101000a900460ff16151514611341576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611338906128db565b60405180910390fd5b8160028460405161135291906126d4565b908152602001604051809103902060060160006101000a81548160ff021916908360028111156113ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550336002846040516113c191906126d4565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060028460405161142291906126d4565b908152602001604051809103902060050154905082600a8281548110611471577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090602091828204019190066101000a81548160ff021916908360028111156114cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550336006828154811061150b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60608060608060608060008760405161157291906126d4565b908152602001604051809103902060040160009054906101000a900460ff166115d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c7906128bb565b60405180910390fd5b60056006600760096008600a8580548060200260200160405190810160405280929190818152602001828054801561165d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611613575b50505050509550848054806020026020016040519081016040528092919081815260200182805480156116e557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161169b575b5050505050945083805480602002602001604051908101604052809291908181526020016000905b828210156117b957838290600052602060002001805461172c90612b67565b80601f016020809104026020016040519081016040528092919081815260200182805461175890612b67565b80156117a55780601f1061177a576101008083540402835291602001916117a5565b820191906000526020600020905b81548152906001019060200180831161178857829003601f168201915b50505050508152602001906001019061170d565b50505050935082805480602002602001604051908101604052809291908181526020016000905b8282101561188c5783829060005260206000200180546117ff90612b67565b80601f016020809104026020016040519081016040528092919081815260200182805461182b90612b67565b80156118785780601f1061184d57610100808354040283529160200191611878565b820191906000526020600020905b81548152906001019060200180831161185b57829003601f168201915b5050505050815260200190600101906117e0565b50505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561195f5783829060005260206000200180546118d290612b67565b80601f01602080910402602001604051908101604052809291908181526020018280546118fe90612b67565b801561194b5780601f106119205761010080835404028352916020019161194b565b820191906000526020600020905b81548152906001019060200180831161192e57829003601f168201915b5050505050815260200190600101906118b3565b50505050915080805480602002602001604051908101604052809291908181526020018280548015611a0b57602002820191906000526020600020906000905b82829054906101000a900460ff1660028111156119e5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001906001019060208260000104928301926001038202915080841161199f5790505b5050505050905095509550955095509550955091939550919395565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054611a6090612b67565b80601f0160208091040260200160405190810160405280929190818152602001828054611a8c90612b67565b8015611ad95780601f10611aae57610100808354040283529160200191611ad9565b820191906000526020600020905b815481529060010190602001808311611abc57829003601f168201915b505050505090806001018054611aee90612b67565b80601f0160208091040260200160405190810160405280929190818152602001828054611b1a90612b67565b8015611b675780601f10611b3c57610100808354040283529160200191611b67565b820191906000526020600020905b815481529060010190602001808311611b4a57829003601f168201915b505050505090806002018054611b7c90612b67565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba890612b67565b8015611bf55780601f10611bca57610100808354040283529160200191611bf5565b820191906000526020600020905b815481529060010190602001808311611bd857829003601f168201915b505050505090806003018054611c0a90612b67565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3690612b67565b8015611c835780601f10611c5857610100808354040283529160200191611c83565b820191906000526020600020905b815481529060010190602001808311611c6657829003601f168201915b5050505050908060040160009054906101000a900460ff16905085565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d27906128fb565b60405180910390fd5b6001600082604051611d4291906126d4565b908152602001604051809103902060040160006101000a81548160ff02191690831515021790555050565b6040518060a0016040528086815260200185815260200184815260200183815260200160001515815250600082604051611da791906126d4565b90815260200160405180910390206000820151816000019080519060200190611dd1929190611e8a565b506020820151816001019080519060200190611dee929190611e8a565b506040820151816002019080519060200190611e0b929190611e8a565b506060820151816003019080519060200190611e28929190611e8a565b5060808201518160040160006101000a81548160ff0219169083151502179055509050505050505050565b60008082604051611e6491906126d4565b908152602001604051809103902060040160009054906101000a900460ff169050919050565b828054611e9690612b67565b90600052602060002090601f016020900481019282611eb85760008555611eff565b82601f10611ed157805160ff1916838001178555611eff565b82800160010185558215611eff579182015b82811115611efe578251825591602001919060010190611ee3565b5b509050611f0c9190611f10565b5090565b5b80821115611f29576000816000905550600101611f11565b5090565b6000611f40611f3b8461296c565b61293b565b905082815260208101848484011115611f5857600080fd5b611f63848285612b25565b509392505050565b600081359050611f7a81612cc3565b92915050565b60008083601f840112611f9257600080fd5b8235905067ffffffffffffffff811115611fab57600080fd5b602083019150836001820283011115611fc357600080fd5b9250929050565b600082601f830112611fdb57600080fd5b8135611feb848260208601611f2d565b91505092915050565b6000806000806040858703121561200a57600080fd5b600085013567ffffffffffffffff81111561202457600080fd5b61203087828801611f80565b9450945050602085013567ffffffffffffffff81111561204f57600080fd5b61205b87828801611f80565b925092505092959194509250565b60006020828403121561207b57600080fd5b600082013567ffffffffffffffff81111561209557600080fd5b6120a184828501611fca565b91505092915050565b6000806000606084860312156120bf57600080fd5b600084013567ffffffffffffffff8111156120d957600080fd5b6120e586828701611fca565b93505060206120f686828701611f6b565b925050604084013567ffffffffffffffff81111561211357600080fd5b61211f86828701611fca565b9150509250925092565b60008060006060848603121561213e57600080fd5b600084013567ffffffffffffffff81111561215857600080fd5b61216486828701611fca565b935050602084013567ffffffffffffffff81111561218157600080fd5b61218d86828701611fca565b925050604084013567ffffffffffffffff8111156121aa57600080fd5b6121b686828701611fca565b9150509250925092565b600080600080600060a086880312156121d857600080fd5b600086013567ffffffffffffffff8111156121f257600080fd5b6121fe88828901611fca565b955050602086013567ffffffffffffffff81111561221b57600080fd5b61222788828901611fca565b945050604086013567ffffffffffffffff81111561224457600080fd5b61225088828901611fca565b935050606086013567ffffffffffffffff81111561226d57600080fd5b61227988828901611fca565b925050608086013567ffffffffffffffff81111561229657600080fd5b6122a288828901611fca565b9150509295509295909350565b60006122bb838361230b565b60208301905092915050565b60006122d383836124c7565b60208301905092915050565b60006122eb83836124d6565b905092915050565b60006122ff83836126c5565b60208301905092915050565b61231481612ab8565b82525050565b61232381612ab8565b82525050565b6000612334826129dc565b61233e8185612a47565b93506123498361299c565b8060005b8381101561237a57815161236188826122af565b975061236c83612a13565b92505060018101905061234d565b5085935050505092915050565b6000612392826129e7565b61239c8185612a7a565b93506123a7836129ac565b8060005b838110156123d85781516123bf88826122c7565b97506123ca83612a20565b9250506001810190506123ab565b5085935050505092915050565b60006123f0826129f2565b6123fa8185612a58565b93508360208202850161240c856129bc565b8060005b85811015612448578484038952815161242985826122df565b945061243483612a2d565b925060208a01995050600181019050612410565b50829750879550505050505092915050565b6000612465826129fd565b61246f8185612a69565b935061247a836129cc565b8060005b838110156124ab57815161249288826122f3565b975061249d83612a3a565b92505060018101905061247e565b5085935050505092915050565b6124c181612aca565b82525050565b6124d081612b13565b82525050565b60006124e182612a08565b6124eb8185612a8b565b93506124fb818560208601612b34565b61250481612c9e565b840191505092915050565b600061251a82612a08565b6125248185612a9c565b9350612534818560208601612b34565b61253d81612c9e565b840191505092915050565b600061255382612a08565b61255d8185612aad565b935061256d818560208601612b34565b80840191505092915050565b6000612586602383612a9c565b91507f4f6e6c792076657269666965722063616e20616363657373207468697320666960008301527f656c6400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006125ec601f83612a9c565b91507f596f75277265206e6f7420616e20617070726f766564207665726966696572006000830152602082019050919050565b600061262c602183612a9c565b91507f4f6e6c792061646d696e2063616e20706572666f6d207468697320616374696f60008301527f6e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612692601883612a9c565b91507f726567697374657220666972737420746f2076657269667900000000000000006000830152602082019050919050565b6126ce81612b09565b82525050565b60006126e08284612548565b915081905092915050565b6000602082019050612700600083018461231a565b92915050565b600060c08201905081810360008301526127208189612329565b905081810360208301526127348188612329565b9050818103604083015261274881876123e5565b9050818103606083015261275c81866123e5565b9050818103608083015261277081856123e5565b905081810360a08301526127848184612387565b9050979650505050505050565b600060e08201905081810360008301526127ab818a612329565b905081810360208301526127bf8189612329565b905081810360408301526127d381886123e5565b905081810360608301526127e781876123e5565b905081810360808301526127fb81866123e5565b905081810360a083015261280f8185612387565b905081810360c0830152612823818461245a565b905098975050505050505050565b600060208201905061284660008301846124b8565b92915050565b600060a0820190508181036000830152612866818861250f565b9050818103602083015261287a818761250f565b9050818103604083015261288e818661250f565b905081810360608301526128a2818561250f565b90506128b160808301846124b8565b9695505050505050565b600060208201905081810360008301526128d481612579565b9050919050565b600060208201905081810360008301526128f4816125df565b9050919050565b600060208201905081810360008301526129148161261f565b9050919050565b6000602082019050818103600083015261293481612685565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561296257612961612c6f565b5b8060405250919050565b600067ffffffffffffffff82111561298757612986612c6f565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612ac382612ae9565b9050919050565b60008115159050919050565b6000819050612ae482612caf565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b1e82612ad6565b9050919050565b82818337600083830152505050565b60005b83811015612b52578082015181840152602081019050612b37565b83811115612b61576000848401525b50505050565b60006002820490506001821680612b7f57607f821691505b60208210811415612b9357612b92612c40565b5b50919050565b6000612ba482612b09565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612bd757612bd6612be2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110612cc057612cbf612c11565b5b50565b60038110612cd057600080fd5b5056fea264697066735822122096d1e9ff4f69dd923084297dd7e374a560969e3048b76514684daa0cc8e7f4aa64736f6c63430008000033",
}

// VerifyABI is the input ABI used to generate the binding from.
// Deprecated: Use VerifyMetaData.ABI instead.
var VerifyABI = VerifyMetaData.ABI

// VerifyBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use VerifyMetaData.Bin instead.
var VerifyBin = VerifyMetaData.Bin

// DeployVerify deploys a new Ethereum contract, binding an instance of Verify to it.
func DeployVerify(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Verify, error) {
	parsed, err := VerifyMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(VerifyBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Verify{VerifyCaller: VerifyCaller{contract: contract}, VerifyTransactor: VerifyTransactor{contract: contract}, VerifyFilterer: VerifyFilterer{contract: contract}}, nil
}

// Verify is an auto generated Go binding around an Ethereum contract.
type Verify struct {
	VerifyCaller     // Read-only binding to the contract
	VerifyTransactor // Write-only binding to the contract
	VerifyFilterer   // Log filterer for contract events
}

// VerifyCaller is an auto generated read-only Go binding around an Ethereum contract.
type VerifyCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifyTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VerifyTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifyFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VerifyFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VerifySession struct {
	Contract     *Verify           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifyCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VerifyCallerSession struct {
	Contract *VerifyCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// VerifyTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VerifyTransactorSession struct {
	Contract     *VerifyTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifyRaw is an auto generated low-level Go binding around an Ethereum contract.
type VerifyRaw struct {
	Contract *Verify // Generic contract binding to access the raw methods on
}

// VerifyCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VerifyCallerRaw struct {
	Contract *VerifyCaller // Generic read-only contract binding to access the raw methods on
}

// VerifyTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VerifyTransactorRaw struct {
	Contract *VerifyTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVerify creates a new instance of Verify, bound to a specific deployed contract.
func NewVerify(address common.Address, backend bind.ContractBackend) (*Verify, error) {
	contract, err := bindVerify(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Verify{VerifyCaller: VerifyCaller{contract: contract}, VerifyTransactor: VerifyTransactor{contract: contract}, VerifyFilterer: VerifyFilterer{contract: contract}}, nil
}

// NewVerifyCaller creates a new read-only instance of Verify, bound to a specific deployed contract.
func NewVerifyCaller(address common.Address, caller bind.ContractCaller) (*VerifyCaller, error) {
	contract, err := bindVerify(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VerifyCaller{contract: contract}, nil
}

// NewVerifyTransactor creates a new write-only instance of Verify, bound to a specific deployed contract.
func NewVerifyTransactor(address common.Address, transactor bind.ContractTransactor) (*VerifyTransactor, error) {
	contract, err := bindVerify(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VerifyTransactor{contract: contract}, nil
}

// NewVerifyFilterer creates a new log filterer instance of Verify, bound to a specific deployed contract.
func NewVerifyFilterer(address common.Address, filterer bind.ContractFilterer) (*VerifyFilterer, error) {
	contract, err := bindVerify(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VerifyFilterer{contract: contract}, nil
}

// bindVerify binds a generic wrapper to an already deployed contract.
func bindVerify(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := VerifyMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verify *VerifyRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Verify.Contract.VerifyCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verify *VerifyRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verify.Contract.VerifyTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verify *VerifyRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verify.Contract.VerifyTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verify *VerifyCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Verify.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verify *VerifyTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verify.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verify *VerifyTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verify.Contract.contract.Transact(opts, method, params...)
}

// AccountAddress is a free data retrieval call binding the contract method 0x1e9b1312.
//
// Solidity: function accountAddress() view returns(address)
func (_Verify *VerifyCaller) AccountAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "accountAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AccountAddress is a free data retrieval call binding the contract method 0x1e9b1312.
//
// Solidity: function accountAddress() view returns(address)
func (_Verify *VerifySession) AccountAddress() (common.Address, error) {
	return _Verify.Contract.AccountAddress(&_Verify.CallOpts)
}

// AccountAddress is a free data retrieval call binding the contract method 0x1e9b1312.
//
// Solidity: function accountAddress() view returns(address)
func (_Verify *VerifyCallerSession) AccountAddress() (common.Address, error) {
	return _Verify.Contract.AccountAddress(&_Verify.CallOpts)
}

// CheckVerifierStatus is a free data retrieval call binding the contract method 0xec53def1.
//
// Solidity: function checkVerifierStatus(string verifier) view returns(bool)
func (_Verify *VerifyCaller) CheckVerifierStatus(opts *bind.CallOpts, verifier string) (bool, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "checkVerifierStatus", verifier)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckVerifierStatus is a free data retrieval call binding the contract method 0xec53def1.
//
// Solidity: function checkVerifierStatus(string verifier) view returns(bool)
func (_Verify *VerifySession) CheckVerifierStatus(verifier string) (bool, error) {
	return _Verify.Contract.CheckVerifierStatus(&_Verify.CallOpts, verifier)
}

// CheckVerifierStatus is a free data retrieval call binding the contract method 0xec53def1.
//
// Solidity: function checkVerifierStatus(string verifier) view returns(bool)
func (_Verify *VerifyCallerSession) CheckVerifierStatus(verifier string) (bool, error) {
	return _Verify.Contract.CheckVerifierStatus(&_Verify.CallOpts, verifier)
}

// GetDocumentList is a free data retrieval call binding the contract method 0x13559331.
//
// Solidity: function getDocumentList(string verifier) view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats, uint256[] userDocId)
func (_Verify *VerifyCaller) GetDocumentList(opts *bind.CallOpts, verifier string) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
	UserDocId []*big.Int
}, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "getDocumentList", verifier)

	outstruct := new(struct {
		Requester []common.Address
		Verifer   []common.Address
		Name      []string
		Ipfs      []string
		Desc      []string
		Stats     []uint8
		UserDocId []*big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Requester = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.Verifer = *abi.ConvertType(out[1], new([]common.Address)).(*[]common.Address)
	outstruct.Name = *abi.ConvertType(out[2], new([]string)).(*[]string)
	outstruct.Ipfs = *abi.ConvertType(out[3], new([]string)).(*[]string)
	outstruct.Desc = *abi.ConvertType(out[4], new([]string)).(*[]string)
	outstruct.Stats = *abi.ConvertType(out[5], new([]uint8)).(*[]uint8)
	outstruct.UserDocId = *abi.ConvertType(out[6], new([]*big.Int)).(*[]*big.Int)

	return *outstruct, err

}

// GetDocumentList is a free data retrieval call binding the contract method 0x13559331.
//
// Solidity: function getDocumentList(string verifier) view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats, uint256[] userDocId)
func (_Verify *VerifySession) GetDocumentList(verifier string) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
	UserDocId []*big.Int
}, error) {
	return _Verify.Contract.GetDocumentList(&_Verify.CallOpts, verifier)
}

// GetDocumentList is a free data retrieval call binding the contract method 0x13559331.
//
// Solidity: function getDocumentList(string verifier) view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats, uint256[] userDocId)
func (_Verify *VerifyCallerSession) GetDocumentList(verifier string) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
	UserDocId []*big.Int
}, error) {
	return _Verify.Contract.GetDocumentList(&_Verify.CallOpts, verifier)
}

// GetDocumentsForVerifier is a free data retrieval call binding the contract method 0xaa5e2181.
//
// Solidity: function getDocumentsForVerifier(string verifier) view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats)
func (_Verify *VerifyCaller) GetDocumentsForVerifier(opts *bind.CallOpts, verifier string) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
}, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "getDocumentsForVerifier", verifier)

	outstruct := new(struct {
		Requester []common.Address
		Verifer   []common.Address
		Name      []string
		Ipfs      []string
		Desc      []string
		Stats     []uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Requester = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.Verifer = *abi.ConvertType(out[1], new([]common.Address)).(*[]common.Address)
	outstruct.Name = *abi.ConvertType(out[2], new([]string)).(*[]string)
	outstruct.Ipfs = *abi.ConvertType(out[3], new([]string)).(*[]string)
	outstruct.Desc = *abi.ConvertType(out[4], new([]string)).(*[]string)
	outstruct.Stats = *abi.ConvertType(out[5], new([]uint8)).(*[]uint8)

	return *outstruct, err

}

// GetDocumentsForVerifier is a free data retrieval call binding the contract method 0xaa5e2181.
//
// Solidity: function getDocumentsForVerifier(string verifier) view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats)
func (_Verify *VerifySession) GetDocumentsForVerifier(verifier string) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
}, error) {
	return _Verify.Contract.GetDocumentsForVerifier(&_Verify.CallOpts, verifier)
}

// GetDocumentsForVerifier is a free data retrieval call binding the contract method 0xaa5e2181.
//
// Solidity: function getDocumentsForVerifier(string verifier) view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats)
func (_Verify *VerifyCallerSession) GetDocumentsForVerifier(verifier string) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
}, error) {
	return _Verify.Contract.GetDocumentsForVerifier(&_Verify.CallOpts, verifier)
}

// Verifiers is a free data retrieval call binding the contract method 0xac205deb.
//
// Solidity: function verifiers(string ) view returns(string name, string email, string AadharNumber, string institute, bool isApprovedVerifier)
func (_Verify *VerifyCaller) Verifiers(opts *bind.CallOpts, arg0 string) (struct {
	Name               string
	Email              string
	AadharNumber       string
	Institute          string
	IsApprovedVerifier bool
}, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "verifiers", arg0)

	outstruct := new(struct {
		Name               string
		Email              string
		AadharNumber       string
		Institute          string
		IsApprovedVerifier bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Name = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Email = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.AadharNumber = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Institute = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.IsApprovedVerifier = *abi.ConvertType(out[4], new(bool)).(*bool)

	return *outstruct, err

}

// Verifiers is a free data retrieval call binding the contract method 0xac205deb.
//
// Solidity: function verifiers(string ) view returns(string name, string email, string AadharNumber, string institute, bool isApprovedVerifier)
func (_Verify *VerifySession) Verifiers(arg0 string) (struct {
	Name               string
	Email              string
	AadharNumber       string
	Institute          string
	IsApprovedVerifier bool
}, error) {
	return _Verify.Contract.Verifiers(&_Verify.CallOpts, arg0)
}

// Verifiers is a free data retrieval call binding the contract method 0xac205deb.
//
// Solidity: function verifiers(string ) view returns(string name, string email, string AadharNumber, string institute, bool isApprovedVerifier)
func (_Verify *VerifyCallerSession) Verifiers(arg0 string) (struct {
	Name               string
	Email              string
	AadharNumber       string
	Institute          string
	IsApprovedVerifier bool
}, error) {
	return _Verify.Contract.Verifiers(&_Verify.CallOpts, arg0)
}

// AddDocument is a paid mutator transaction binding the contract method 0x36a8915b.
//
// Solidity: function addDocument(string _name, string _ipfshash, string _description) returns()
func (_Verify *VerifyTransactor) AddDocument(opts *bind.TransactOpts, _name string, _ipfshash string, _description string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "addDocument", _name, _ipfshash, _description)
}

// AddDocument is a paid mutator transaction binding the contract method 0x36a8915b.
//
// Solidity: function addDocument(string _name, string _ipfshash, string _description) returns()
func (_Verify *VerifySession) AddDocument(_name string, _ipfshash string, _description string) (*types.Transaction, error) {
	return _Verify.Contract.AddDocument(&_Verify.TransactOpts, _name, _ipfshash, _description)
}

// AddDocument is a paid mutator transaction binding the contract method 0x36a8915b.
//
// Solidity: function addDocument(string _name, string _ipfshash, string _description) returns()
func (_Verify *VerifyTransactorSession) AddDocument(_name string, _ipfshash string, _description string) (*types.Transaction, error) {
	return _Verify.Contract.AddDocument(&_Verify.TransactOpts, _name, _ipfshash, _description)
}

// ApproveVerifier is a paid mutator transaction binding the contract method 0xba785725.
//
// Solidity: function approveVerifier(string verifier) returns()
func (_Verify *VerifyTransactor) ApproveVerifier(opts *bind.TransactOpts, verifier string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "approveVerifier", verifier)
}

// ApproveVerifier is a paid mutator transaction binding the contract method 0xba785725.
//
// Solidity: function approveVerifier(string verifier) returns()
func (_Verify *VerifySession) ApproveVerifier(verifier string) (*types.Transaction, error) {
	return _Verify.Contract.ApproveVerifier(&_Verify.TransactOpts, verifier)
}

// ApproveVerifier is a paid mutator transaction binding the contract method 0xba785725.
//
// Solidity: function approveVerifier(string verifier) returns()
func (_Verify *VerifyTransactorSession) ApproveVerifier(verifier string) (*types.Transaction, error) {
	return _Verify.Contract.ApproveVerifier(&_Verify.TransactOpts, verifier)
}

// RegisterAsUser is a paid mutator transaction binding the contract method 0x20857a9f.
//
// Solidity: function registerAsUser(string _name, string _email) returns()
func (_Verify *VerifyTransactor) RegisterAsUser(opts *bind.TransactOpts, _name string, _email string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "registerAsUser", _name, _email)
}

// RegisterAsUser is a paid mutator transaction binding the contract method 0x20857a9f.
//
// Solidity: function registerAsUser(string _name, string _email) returns()
func (_Verify *VerifySession) RegisterAsUser(_name string, _email string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsUser(&_Verify.TransactOpts, _name, _email)
}

// RegisterAsUser is a paid mutator transaction binding the contract method 0x20857a9f.
//
// Solidity: function registerAsUser(string _name, string _email) returns()
func (_Verify *VerifyTransactorSession) RegisterAsUser(_name string, _email string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsUser(&_Verify.TransactOpts, _name, _email)
}

// RegisterAsVerifier is a paid mutator transaction binding the contract method 0xe95e5208.
//
// Solidity: function registerAsVerifier(string _name, string _email, string _aadharNum, string _institute, string _verifierAddr) returns()
func (_Verify *VerifyTransactor) RegisterAsVerifier(opts *bind.TransactOpts, _name string, _email string, _aadharNum string, _institute string, _verifierAddr string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "registerAsVerifier", _name, _email, _aadharNum, _institute, _verifierAddr)
}

// RegisterAsVerifier is a paid mutator transaction binding the contract method 0xe95e5208.
//
// Solidity: function registerAsVerifier(string _name, string _email, string _aadharNum, string _institute, string _verifierAddr) returns()
func (_Verify *VerifySession) RegisterAsVerifier(_name string, _email string, _aadharNum string, _institute string, _verifierAddr string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsVerifier(&_Verify.TransactOpts, _name, _email, _aadharNum, _institute, _verifierAddr)
}

// RegisterAsVerifier is a paid mutator transaction binding the contract method 0xe95e5208.
//
// Solidity: function registerAsVerifier(string _name, string _email, string _aadharNum, string _institute, string _verifierAddr) returns()
func (_Verify *VerifyTransactorSession) RegisterAsVerifier(_name string, _email string, _aadharNum string, _institute string, _verifierAddr string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsVerifier(&_Verify.TransactOpts, _name, _email, _aadharNum, _institute, _verifierAddr)
}

// VerifyDocuments is a paid mutator transaction binding the contract method 0x535c53e7.
//
// Solidity: function verifyDocuments(string ipfs, uint8 _status, string verifier) payable returns()
func (_Verify *VerifyTransactor) VerifyDocuments(opts *bind.TransactOpts, ipfs string, _status uint8, verifier string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "verifyDocuments", ipfs, _status, verifier)
}

// VerifyDocuments is a paid mutator transaction binding the contract method 0x535c53e7.
//
// Solidity: function verifyDocuments(string ipfs, uint8 _status, string verifier) payable returns()
func (_Verify *VerifySession) VerifyDocuments(ipfs string, _status uint8, verifier string) (*types.Transaction, error) {
	return _Verify.Contract.VerifyDocuments(&_Verify.TransactOpts, ipfs, _status, verifier)
}

// VerifyDocuments is a paid mutator transaction binding the contract method 0x535c53e7.
//
// Solidity: function verifyDocuments(string ipfs, uint8 _status, string verifier) payable returns()
func (_Verify *VerifyTransactorSession) VerifyDocuments(ipfs string, _status uint8, verifier string) (*types.Transaction, error) {
	return _Verify.Contract.VerifyDocuments(&_Verify.TransactOpts, ipfs, _status, verifier)
}
