// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package verify

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// VerifyMetaData contains all meta data concerning the Verify contract.
var VerifyMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfshash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"approveVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkVerifierStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocumentList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"requester\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"verifer\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"name\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"ipfs\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"desc\",\"type\":\"string[]\"},{\"internalType\":\"enumVerification.DocStatus[]\",\"name\":\"stats\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"userDocId\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDocumentsForVerifier\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"requester\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"verifer\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"name\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"ipfs\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"desc\",\"type\":\"string[]\"},{\"internalType\":\"enumVerification.DocStatus[]\",\"name\":\"stats\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"}],\"name\":\"registerAsUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_aadharNum\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_institute\",\"type\":\"string\"}],\"name\":\"registerAsVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifiers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"AadharNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"institute\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isApprovedVerifier\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfs\",\"type\":\"string\"},{\"internalType\":\"enumVerification.DocStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"verifyDocuments\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "0x60806040526000600b5534801561001557600080fd5b5033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d34806100666000396000f3fe6080604052600436106100915760003560e01c80636c824487116100595780636c8244871461016e578063cfc197b0146101af578063d6307acd146101d8578063f036d2e814610201578063fb63030c1461023257610091565b80631a47c5c5146100965780631e9b1312146100c657806320857a9f146100f157806336a8915b1461011a57806365f272d114610143575b600080fd5b3480156100a257600080fd5b506100ab61024e565b6040516100bd9695949392919061271a565b60405180910390f35b3480156100d257600080fd5b506100db61073b565b6040516100e891906126ff565b60405180910390f35b3480156100fd57600080fd5b50610118600480360381019061011391906120a0565b610761565b005b34801561012657600080fd5b50610141600480360381019061013c9190612169565b6108d8565b005b34801561014f57600080fd5b50610158610df2565b6040516101659190612845565b60405180910390f35b34801561017a57600080fd5b5061019560048036038101906101909190612077565b610e48565b6040516101a6959493929190612860565b60405180910390f35b3480156101bb57600080fd5b506101d660048036038101906101d19190612077565b6110ab565b005b3480156101e457600080fd5b506101ff60048036038101906101fa9190612200565b611198565b005b34801561020d57600080fd5b5061021661129d565b60405161022997969594939291906127a5565b60405180910390f35b61024c60048036038101906102479190612115565b611c4c565b005b6060806060806060806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff166102e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dc906128cf565b60405180910390fd5b60056006600760096008600a8580548060200260200160405190810160405280929190818152602001828054801561037257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610328575b50505050509550848054806020026020016040519081016040528092919081815260200182805480156103fa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103b0575b5050505050945083805480602002602001604051908101604052809291908181526020016000905b828210156104ce57838290600052602060002001805461044190612b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461046d90612b7b565b80156104ba5780601f1061048f576101008083540402835291602001916104ba565b820191906000526020600020905b81548152906001019060200180831161049d57829003601f168201915b505050505081526020019060010190610422565b50505050935082805480602002602001604051908101604052809291908181526020016000905b828210156105a157838290600052602060002001805461051490612b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461054090612b7b565b801561058d5780601f106105625761010080835404028352916020019161058d565b820191906000526020600020905b81548152906001019060200180831161057057829003601f168201915b5050505050815260200190600101906104f5565b50505050925081805480602002602001604051908101604052809291908181526020016000905b828210156106745783829060005260206000200180546105e790612b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461061390612b7b565b80156106605780601f1061063557610100808354040283529160200191610660565b820191906000526020600020905b81548152906001019060200180831161064357829003601f168201915b5050505050815260200190600101906105c8565b5050505091508080548060200260200160405190810160405280929190818152602001828054801561072057602002820191906000526020600020906000905b82829054906101000a900460ff1660028111156106fa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815260200190600101906020826000010492830192600103820291508084116106b45790505b50505050509050955095509550955095509550909192939495565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806040016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200183838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610859929190611ef8565b506020820151816001019080519060200190610876929190611ef8565b509050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690506001151581151514610970576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109679061292f565b60405180910390fd5b60006040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001868152602001848152602001858152602001600b548152602001600280811115610a09577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b815250905080600285604051610a1f91906126e8565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610ad7929190611ef8565b506060820151816003019080519060200190610af4929190611ef8565b506080820151816004019080519060200190610b11929190611ef8565b5060a0820151816005015560c08201518160060160006101000a81548160ff02191690836002811115610b6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550905050600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b5490806001815401808255809150506001900390600052602060002001600090919091909150556005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600785908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610cdf929190611ef8565b50600883908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610d1b929190611ef8565b50600984908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610d57929190611ef8565b50600a600290806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff02191690836002811115610dce577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600b6000815480929190610de690612bad565b91905055505050505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16905090565b6000602052806000526040600020600091509050806000018054610e6b90612b7b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9790612b7b565b8015610ee45780601f10610eb957610100808354040283529160200191610ee4565b820191906000526020600020905b815481529060010190602001808311610ec757829003601f168201915b505050505090806001018054610ef990612b7b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2590612b7b565b8015610f725780601f10610f4757610100808354040283529160200191610f72565b820191906000526020600020905b815481529060010190602001808311610f5557829003601f168201915b505050505090806002018054610f8790612b7b565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb390612b7b565b80156110005780601f10610fd557610100808354040283529160200191611000565b820191906000526020600020905b815481529060010190602001808311610fe357829003601f168201915b50505050509080600301805461101590612b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461104190612b7b565b801561108e5780601f106110635761010080835404028352916020019161108e565b820191906000526020600020905b81548152906001019060200180831161107157829003601f168201915b5050505050908060040160009054906101000a900460ff16905085565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461113b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111329061290f565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff02191690831515021790555050565b6040518060a00160405280858152602001848152602001838152602001828152602001600015158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061121c929190611ef8565b506020820151816001019080519060200190611239929190611ef8565b506040820151816002019080519060200190611256929190611ef8565b506060820151816003019080519060200190611273929190611ef8565b5060808201518160040160006101000a81548160ff02191690831515021790555090505050505050565b60608060608060608060606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16156117c15760056006600760096008600a600067ffffffffffffffff811115611349577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156113775781602001602082028036833780820191505090505b50868054806020026020016040519081016040528092919081815260200182805480156113f957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113af575b505050505096508580548060200260200160405190810160405280929190818152602001828054801561148157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611437575b5050505050955084805480602002602001604051908101604052809291908181526020016000905b828210156115555783829060005260206000200180546114c890612b7b565b80601f01602080910402602001604051908101604052809291908181526020018280546114f490612b7b565b80156115415780601f1061151657610100808354040283529160200191611541565b820191906000526020600020905b81548152906001019060200180831161152457829003601f168201915b5050505050815260200190600101906114a9565b50505050945083805480602002602001604051908101604052809291908181526020016000905b8282101561162857838290600052602060002001805461159b90612b7b565b80601f01602080910402602001604051908101604052809291908181526020018280546115c790612b7b565b80156116145780601f106115e957610100808354040283529160200191611614565b820191906000526020600020905b8154815290600101906020018083116115f757829003601f168201915b50505050508152602001906001019061157c565b50505050935082805480602002602001604051908101604052809291908181526020016000905b828210156116fb57838290600052602060002001805461166e90612b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461169a90612b7b565b80156116e75780601f106116bc576101008083540402835291602001916116e7565b820191906000526020600020905b8154815290600101906020018083116116ca57829003601f168201915b50505050508152602001906001019061164f565b505050509250818054806020026020016040519081016040528092919081815260200182805480156117a757602002820191906000526020600020906000905b82829054906101000a900460ff166002811115611781577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8152602001906001019060208260000104928301926001038202915080841161173b5790505b505050505091509650965096509650965096509650611c43565b600560066007600067ffffffffffffffff811115611808577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561183b57816020015b60608152602001906001900390816118265790505b506008600a600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208680548060200260200160405190810160405280929190818152602001828054801561190057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116118b6575b505050505096508580548060200260200160405190810160405280929190818152602001828054801561198857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161193e575b5050505050955084805480602002602001604051908101604052809291908181526020016000905b82821015611a5c5783829060005260206000200180546119cf90612b7b565b80601f01602080910402602001604051908101604052809291908181526020018280546119fb90612b7b565b8015611a485780601f10611a1d57610100808354040283529160200191611a48565b820191906000526020600020905b815481529060010190602001808311611a2b57829003601f168201915b5050505050815260200190600101906119b0565b50505050945082805480602002602001604051908101604052809291908181526020016000905b82821015611b2f578382906000526020600020018054611aa290612b7b565b80601f0160208091040260200160405190810160405280929190818152602001828054611ace90612b7b565b8015611b1b5780601f10611af057610100808354040283529160200191611b1b565b820191906000526020600020905b815481529060010190602001808311611afe57829003601f168201915b505050505081526020019060010190611a83565b50505050925081805480602002602001604051908101604052809291908181526020018280548015611bdb57602002820191906000526020600020906000905b82829054906101000a900460ff166002811115611bb5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020019060010190602082600001049283019260010382029150808411611b6f5790505b5050505050915080805480602002602001604051908101604052809291908181526020018280548015611c2d57602002820191906000526020600020905b815481526020019060010190808311611c19575b5050505050905096509650965096509650965096505b90919293949596565b600115156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16151514611ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd8906128ef565b60405180910390fd5b80600283604051611cf291906126e8565b908152602001604051809103902060060160006101000a81548160ff02191690836002811115611d4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555033600283604051611d6191906126e8565b908152602001604051809103902060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600283604051611dc291906126e8565b908152602001604051809103902060050154905081600a8281548110611e11577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090602091828204019190066101000a81548160ff02191690836002811115611e6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503360068281548110611eab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b828054611f0490612b7b565b90600052602060002090601f016020900481019282611f265760008555611f6d565b82601f10611f3f57805160ff1916838001178555611f6d565b82800160010185558215611f6d579182015b82811115611f6c578251825591602001919060010190611f51565b5b509050611f7a9190611f7e565b5090565b5b80821115611f97576000816000905550600101611f7f565b5090565b6000611fae611fa984612980565b61294f565b905082815260208101848484011115611fc657600080fd5b611fd1848285612b39565b509392505050565b600081359050611fe881612cd7565b92915050565b600081359050611ffd81612cee565b92915050565b60008083601f84011261201557600080fd5b8235905067ffffffffffffffff81111561202e57600080fd5b60208301915083600182028301111561204657600080fd5b9250929050565b600082601f83011261205e57600080fd5b813561206e848260208601611f9b565b91505092915050565b60006020828403121561208957600080fd5b600061209784828501611fd9565b91505092915050565b600080600080604085870312156120b657600080fd5b600085013567ffffffffffffffff8111156120d057600080fd5b6120dc87828801612003565b9450945050602085013567ffffffffffffffff8111156120fb57600080fd5b61210787828801612003565b925092505092959194509250565b6000806040838503121561212857600080fd5b600083013567ffffffffffffffff81111561214257600080fd5b61214e8582860161204d565b925050602061215f85828601611fee565b9150509250929050565b60008060006060848603121561217e57600080fd5b600084013567ffffffffffffffff81111561219857600080fd5b6121a48682870161204d565b935050602084013567ffffffffffffffff8111156121c157600080fd5b6121cd8682870161204d565b925050604084013567ffffffffffffffff8111156121ea57600080fd5b6121f68682870161204d565b9150509250925092565b6000806000806080858703121561221657600080fd5b600085013567ffffffffffffffff81111561223057600080fd5b61223c8782880161204d565b945050602085013567ffffffffffffffff81111561225957600080fd5b6122658782880161204d565b935050604085013567ffffffffffffffff81111561228257600080fd5b61228e8782880161204d565b925050606085013567ffffffffffffffff8111156122ab57600080fd5b6122b78782880161204d565b91505092959194509250565b60006122cf838361231f565b60208301905092915050565b60006122e783836124db565b60208301905092915050565b60006122ff83836124ea565b905092915050565b600061231383836126d9565b60208301905092915050565b61232881612acc565b82525050565b61233781612acc565b82525050565b6000612348826129f0565b6123528185612a5b565b935061235d836129b0565b8060005b8381101561238e57815161237588826122c3565b975061238083612a27565b925050600181019050612361565b5085935050505092915050565b60006123a6826129fb565b6123b08185612a8e565b93506123bb836129c0565b8060005b838110156123ec5781516123d388826122db565b97506123de83612a34565b9250506001810190506123bf565b5085935050505092915050565b600061240482612a06565b61240e8185612a6c565b935083602082028501612420856129d0565b8060005b8581101561245c578484038952815161243d85826122f3565b945061244883612a41565b925060208a01995050600181019050612424565b50829750879550505050505092915050565b600061247982612a11565b6124838185612a7d565b935061248e836129e0565b8060005b838110156124bf5781516124a68882612307565b97506124b183612a4e565b925050600181019050612492565b5085935050505092915050565b6124d581612ade565b82525050565b6124e481612b27565b82525050565b60006124f582612a1c565b6124ff8185612a9f565b935061250f818560208601612b48565b61251881612cb2565b840191505092915050565b600061252e82612a1c565b6125388185612ab0565b9350612548818560208601612b48565b61255181612cb2565b840191505092915050565b600061256782612a1c565b6125718185612ac1565b9350612581818560208601612b48565b80840191505092915050565b600061259a602383612ab0565b91507f4f6e6c792076657269666965722063616e20616363657373207468697320666960008301527f656c6400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612600601f83612ab0565b91507f596f75277265206e6f7420616e20617070726f766564207665726966696572006000830152602082019050919050565b6000612640602183612ab0565b91507f4f6e6c792061646d696e2063616e20706572666f6d207468697320616374696f60008301527f6e000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006126a6601883612ab0565b91507f726567697374657220666972737420746f2076657269667900000000000000006000830152602082019050919050565b6126e281612b1d565b82525050565b60006126f4828461255c565b915081905092915050565b6000602082019050612714600083018461232e565b92915050565b600060c0820190508181036000830152612734818961233d565b90508181036020830152612748818861233d565b9050818103604083015261275c81876123f9565b9050818103606083015261277081866123f9565b9050818103608083015261278481856123f9565b905081810360a0830152612798818461239b565b9050979650505050505050565b600060e08201905081810360008301526127bf818a61233d565b905081810360208301526127d3818961233d565b905081810360408301526127e781886123f9565b905081810360608301526127fb81876123f9565b9050818103608083015261280f81866123f9565b905081810360a0830152612823818561239b565b905081810360c0830152612837818461246e565b905098975050505050505050565b600060208201905061285a60008301846124cc565b92915050565b600060a082019050818103600083015261287a8188612523565b9050818103602083015261288e8187612523565b905081810360408301526128a28186612523565b905081810360608301526128b68185612523565b90506128c560808301846124cc565b9695505050505050565b600060208201905081810360008301526128e88161258d565b9050919050565b60006020820190508181036000830152612908816125f3565b9050919050565b6000602082019050818103600083015261292881612633565b9050919050565b6000602082019050818103600083015261294881612699565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561297657612975612c83565b5b8060405250919050565b600067ffffffffffffffff82111561299b5761299a612c83565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000612ad782612afd565b9050919050565b60008115159050919050565b6000819050612af882612cc3565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612b3282612aea565b9050919050565b82818337600083830152505050565b60005b83811015612b66578082015181840152602081019050612b4b565b83811115612b75576000848401525b50505050565b60006002820490506001821680612b9357607f821691505b60208210811415612ba757612ba6612c54565b5b50919050565b6000612bb882612b1d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612beb57612bea612bf6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60038110612cd457612cd3612c25565b5b50565b612ce081612acc565b8114612ceb57600080fd5b50565b60038110612cfb57600080fd5b5056fea26469706673582212205aff5596702c8ece96c4a398bd67402ac561bc2029e085629ed9c0e59de3af4a64736f6c63430008000033",
}

// VerifyABI is the input ABI used to generate the binding from.
// Deprecated: Use VerifyMetaData.ABI instead.
var VerifyABI = VerifyMetaData.ABI

// VerifyBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use VerifyMetaData.Bin instead.
var VerifyBin = VerifyMetaData.Bin

// DeployVerify deploys a new Ethereum contract, binding an instance of Verify to it.
func DeployVerify(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Verify, error) {
	parsed, err := VerifyMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(VerifyBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Verify{VerifyCaller: VerifyCaller{contract: contract}, VerifyTransactor: VerifyTransactor{contract: contract}, VerifyFilterer: VerifyFilterer{contract: contract}}, nil
}

// Verify is an auto generated Go binding around an Ethereum contract.
type Verify struct {
	VerifyCaller     // Read-only binding to the contract
	VerifyTransactor // Write-only binding to the contract
	VerifyFilterer   // Log filterer for contract events
}

// VerifyCaller is an auto generated read-only Go binding around an Ethereum contract.
type VerifyCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifyTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VerifyTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifyFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VerifyFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VerifySession struct {
	Contract     *Verify           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifyCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VerifyCallerSession struct {
	Contract *VerifyCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// VerifyTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VerifyTransactorSession struct {
	Contract     *VerifyTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifyRaw is an auto generated low-level Go binding around an Ethereum contract.
type VerifyRaw struct {
	Contract *Verify // Generic contract binding to access the raw methods on
}

// VerifyCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VerifyCallerRaw struct {
	Contract *VerifyCaller // Generic read-only contract binding to access the raw methods on
}

// VerifyTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VerifyTransactorRaw struct {
	Contract *VerifyTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVerify creates a new instance of Verify, bound to a specific deployed contract.
func NewVerify(address common.Address, backend bind.ContractBackend) (*Verify, error) {
	contract, err := bindVerify(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Verify{VerifyCaller: VerifyCaller{contract: contract}, VerifyTransactor: VerifyTransactor{contract: contract}, VerifyFilterer: VerifyFilterer{contract: contract}}, nil
}

// NewVerifyCaller creates a new read-only instance of Verify, bound to a specific deployed contract.
func NewVerifyCaller(address common.Address, caller bind.ContractCaller) (*VerifyCaller, error) {
	contract, err := bindVerify(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VerifyCaller{contract: contract}, nil
}

// NewVerifyTransactor creates a new write-only instance of Verify, bound to a specific deployed contract.
func NewVerifyTransactor(address common.Address, transactor bind.ContractTransactor) (*VerifyTransactor, error) {
	contract, err := bindVerify(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VerifyTransactor{contract: contract}, nil
}

// NewVerifyFilterer creates a new log filterer instance of Verify, bound to a specific deployed contract.
func NewVerifyFilterer(address common.Address, filterer bind.ContractFilterer) (*VerifyFilterer, error) {
	contract, err := bindVerify(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VerifyFilterer{contract: contract}, nil
}

// bindVerify binds a generic wrapper to an already deployed contract.
func bindVerify(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := VerifyMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verify *VerifyRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Verify.Contract.VerifyCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verify *VerifyRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verify.Contract.VerifyTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verify *VerifyRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verify.Contract.VerifyTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verify *VerifyCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Verify.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verify *VerifyTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verify.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verify *VerifyTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verify.Contract.contract.Transact(opts, method, params...)
}

// AccountAddress is a free data retrieval call binding the contract method 0x1e9b1312.
//
// Solidity: function accountAddress() view returns(address)
func (_Verify *VerifyCaller) AccountAddress(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "accountAddress")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AccountAddress is a free data retrieval call binding the contract method 0x1e9b1312.
//
// Solidity: function accountAddress() view returns(address)
func (_Verify *VerifySession) AccountAddress() (common.Address, error) {
	return _Verify.Contract.AccountAddress(&_Verify.CallOpts)
}

// AccountAddress is a free data retrieval call binding the contract method 0x1e9b1312.
//
// Solidity: function accountAddress() view returns(address)
func (_Verify *VerifyCallerSession) AccountAddress() (common.Address, error) {
	return _Verify.Contract.AccountAddress(&_Verify.CallOpts)
}

// CheckVerifierStatus is a free data retrieval call binding the contract method 0x65f272d1.
//
// Solidity: function checkVerifierStatus() view returns(bool)
func (_Verify *VerifyCaller) CheckVerifierStatus(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "checkVerifierStatus")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckVerifierStatus is a free data retrieval call binding the contract method 0x65f272d1.
//
// Solidity: function checkVerifierStatus() view returns(bool)
func (_Verify *VerifySession) CheckVerifierStatus() (bool, error) {
	return _Verify.Contract.CheckVerifierStatus(&_Verify.CallOpts)
}

// CheckVerifierStatus is a free data retrieval call binding the contract method 0x65f272d1.
//
// Solidity: function checkVerifierStatus() view returns(bool)
func (_Verify *VerifyCallerSession) CheckVerifierStatus() (bool, error) {
	return _Verify.Contract.CheckVerifierStatus(&_Verify.CallOpts)
}

// GetDocumentList is a free data retrieval call binding the contract method 0xf036d2e8.
//
// Solidity: function getDocumentList() view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats, uint256[] userDocId)
func (_Verify *VerifyCaller) GetDocumentList(opts *bind.CallOpts) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
	UserDocId []*big.Int
}, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "getDocumentList")

	outstruct := new(struct {
		Requester []common.Address
		Verifer   []common.Address
		Name      []string
		Ipfs      []string
		Desc      []string
		Stats     []uint8
		UserDocId []*big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Requester = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.Verifer = *abi.ConvertType(out[1], new([]common.Address)).(*[]common.Address)
	outstruct.Name = *abi.ConvertType(out[2], new([]string)).(*[]string)
	outstruct.Ipfs = *abi.ConvertType(out[3], new([]string)).(*[]string)
	outstruct.Desc = *abi.ConvertType(out[4], new([]string)).(*[]string)
	outstruct.Stats = *abi.ConvertType(out[5], new([]uint8)).(*[]uint8)
	outstruct.UserDocId = *abi.ConvertType(out[6], new([]*big.Int)).(*[]*big.Int)

	return *outstruct, err

}

// GetDocumentList is a free data retrieval call binding the contract method 0xf036d2e8.
//
// Solidity: function getDocumentList() view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats, uint256[] userDocId)
func (_Verify *VerifySession) GetDocumentList() (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
	UserDocId []*big.Int
}, error) {
	return _Verify.Contract.GetDocumentList(&_Verify.CallOpts)
}

// GetDocumentList is a free data retrieval call binding the contract method 0xf036d2e8.
//
// Solidity: function getDocumentList() view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats, uint256[] userDocId)
func (_Verify *VerifyCallerSession) GetDocumentList() (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
	UserDocId []*big.Int
}, error) {
	return _Verify.Contract.GetDocumentList(&_Verify.CallOpts)
}

// GetDocumentsForVerifier is a free data retrieval call binding the contract method 0x1a47c5c5.
//
// Solidity: function getDocumentsForVerifier() view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats)
func (_Verify *VerifyCaller) GetDocumentsForVerifier(opts *bind.CallOpts) (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
}, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "getDocumentsForVerifier")

	outstruct := new(struct {
		Requester []common.Address
		Verifer   []common.Address
		Name      []string
		Ipfs      []string
		Desc      []string
		Stats     []uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Requester = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.Verifer = *abi.ConvertType(out[1], new([]common.Address)).(*[]common.Address)
	outstruct.Name = *abi.ConvertType(out[2], new([]string)).(*[]string)
	outstruct.Ipfs = *abi.ConvertType(out[3], new([]string)).(*[]string)
	outstruct.Desc = *abi.ConvertType(out[4], new([]string)).(*[]string)
	outstruct.Stats = *abi.ConvertType(out[5], new([]uint8)).(*[]uint8)

	return *outstruct, err

}

// GetDocumentsForVerifier is a free data retrieval call binding the contract method 0x1a47c5c5.
//
// Solidity: function getDocumentsForVerifier() view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats)
func (_Verify *VerifySession) GetDocumentsForVerifier() (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
}, error) {
	return _Verify.Contract.GetDocumentsForVerifier(&_Verify.CallOpts)
}

// GetDocumentsForVerifier is a free data retrieval call binding the contract method 0x1a47c5c5.
//
// Solidity: function getDocumentsForVerifier() view returns(address[] requester, address[] verifer, string[] name, string[] ipfs, string[] desc, uint8[] stats)
func (_Verify *VerifyCallerSession) GetDocumentsForVerifier() (struct {
	Requester []common.Address
	Verifer   []common.Address
	Name      []string
	Ipfs      []string
	Desc      []string
	Stats     []uint8
}, error) {
	return _Verify.Contract.GetDocumentsForVerifier(&_Verify.CallOpts)
}

// Verifiers is a free data retrieval call binding the contract method 0x6c824487.
//
// Solidity: function verifiers(address ) view returns(string name, string email, string AadharNumber, string institute, bool isApprovedVerifier)
func (_Verify *VerifyCaller) Verifiers(opts *bind.CallOpts, arg0 common.Address) (struct {
	Name               string
	Email              string
	AadharNumber       string
	Institute          string
	IsApprovedVerifier bool
}, error) {
	var out []interface{}
	err := _Verify.contract.Call(opts, &out, "verifiers", arg0)

	outstruct := new(struct {
		Name               string
		Email              string
		AadharNumber       string
		Institute          string
		IsApprovedVerifier bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Name = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Email = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.AadharNumber = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Institute = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.IsApprovedVerifier = *abi.ConvertType(out[4], new(bool)).(*bool)

	return *outstruct, err

}

// Verifiers is a free data retrieval call binding the contract method 0x6c824487.
//
// Solidity: function verifiers(address ) view returns(string name, string email, string AadharNumber, string institute, bool isApprovedVerifier)
func (_Verify *VerifySession) Verifiers(arg0 common.Address) (struct {
	Name               string
	Email              string
	AadharNumber       string
	Institute          string
	IsApprovedVerifier bool
}, error) {
	return _Verify.Contract.Verifiers(&_Verify.CallOpts, arg0)
}

// Verifiers is a free data retrieval call binding the contract method 0x6c824487.
//
// Solidity: function verifiers(address ) view returns(string name, string email, string AadharNumber, string institute, bool isApprovedVerifier)
func (_Verify *VerifyCallerSession) Verifiers(arg0 common.Address) (struct {
	Name               string
	Email              string
	AadharNumber       string
	Institute          string
	IsApprovedVerifier bool
}, error) {
	return _Verify.Contract.Verifiers(&_Verify.CallOpts, arg0)
}

// AddDocument is a paid mutator transaction binding the contract method 0x36a8915b.
//
// Solidity: function addDocument(string _name, string _ipfshash, string _description) returns()
func (_Verify *VerifyTransactor) AddDocument(opts *bind.TransactOpts, _name string, _ipfshash string, _description string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "addDocument", _name, _ipfshash, _description)
}

// AddDocument is a paid mutator transaction binding the contract method 0x36a8915b.
//
// Solidity: function addDocument(string _name, string _ipfshash, string _description) returns()
func (_Verify *VerifySession) AddDocument(_name string, _ipfshash string, _description string) (*types.Transaction, error) {
	return _Verify.Contract.AddDocument(&_Verify.TransactOpts, _name, _ipfshash, _description)
}

// AddDocument is a paid mutator transaction binding the contract method 0x36a8915b.
//
// Solidity: function addDocument(string _name, string _ipfshash, string _description) returns()
func (_Verify *VerifyTransactorSession) AddDocument(_name string, _ipfshash string, _description string) (*types.Transaction, error) {
	return _Verify.Contract.AddDocument(&_Verify.TransactOpts, _name, _ipfshash, _description)
}

// ApproveVerifier is a paid mutator transaction binding the contract method 0xcfc197b0.
//
// Solidity: function approveVerifier(address verifier) returns()
func (_Verify *VerifyTransactor) ApproveVerifier(opts *bind.TransactOpts, verifier common.Address) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "approveVerifier", verifier)
}

// ApproveVerifier is a paid mutator transaction binding the contract method 0xcfc197b0.
//
// Solidity: function approveVerifier(address verifier) returns()
func (_Verify *VerifySession) ApproveVerifier(verifier common.Address) (*types.Transaction, error) {
	return _Verify.Contract.ApproveVerifier(&_Verify.TransactOpts, verifier)
}

// ApproveVerifier is a paid mutator transaction binding the contract method 0xcfc197b0.
//
// Solidity: function approveVerifier(address verifier) returns()
func (_Verify *VerifyTransactorSession) ApproveVerifier(verifier common.Address) (*types.Transaction, error) {
	return _Verify.Contract.ApproveVerifier(&_Verify.TransactOpts, verifier)
}

// RegisterAsUser is a paid mutator transaction binding the contract method 0x20857a9f.
//
// Solidity: function registerAsUser(string _name, string _email) returns()
func (_Verify *VerifyTransactor) RegisterAsUser(opts *bind.TransactOpts, _name string, _email string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "registerAsUser", _name, _email)
}

// RegisterAsUser is a paid mutator transaction binding the contract method 0x20857a9f.
//
// Solidity: function registerAsUser(string _name, string _email) returns()
func (_Verify *VerifySession) RegisterAsUser(_name string, _email string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsUser(&_Verify.TransactOpts, _name, _email)
}

// RegisterAsUser is a paid mutator transaction binding the contract method 0x20857a9f.
//
// Solidity: function registerAsUser(string _name, string _email) returns()
func (_Verify *VerifyTransactorSession) RegisterAsUser(_name string, _email string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsUser(&_Verify.TransactOpts, _name, _email)
}

// RegisterAsVerifier is a paid mutator transaction binding the contract method 0xd6307acd.
//
// Solidity: function registerAsVerifier(string _name, string _email, string _aadharNum, string _institute) returns()
func (_Verify *VerifyTransactor) RegisterAsVerifier(opts *bind.TransactOpts, _name string, _email string, _aadharNum string, _institute string) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "registerAsVerifier", _name, _email, _aadharNum, _institute)
}

// RegisterAsVerifier is a paid mutator transaction binding the contract method 0xd6307acd.
//
// Solidity: function registerAsVerifier(string _name, string _email, string _aadharNum, string _institute) returns()
func (_Verify *VerifySession) RegisterAsVerifier(_name string, _email string, _aadharNum string, _institute string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsVerifier(&_Verify.TransactOpts, _name, _email, _aadharNum, _institute)
}

// RegisterAsVerifier is a paid mutator transaction binding the contract method 0xd6307acd.
//
// Solidity: function registerAsVerifier(string _name, string _email, string _aadharNum, string _institute) returns()
func (_Verify *VerifyTransactorSession) RegisterAsVerifier(_name string, _email string, _aadharNum string, _institute string) (*types.Transaction, error) {
	return _Verify.Contract.RegisterAsVerifier(&_Verify.TransactOpts, _name, _email, _aadharNum, _institute)
}

// VerifyDocuments is a paid mutator transaction binding the contract method 0xfb63030c.
//
// Solidity: function verifyDocuments(string ipfs, uint8 _status) payable returns()
func (_Verify *VerifyTransactor) VerifyDocuments(opts *bind.TransactOpts, ipfs string, _status uint8) (*types.Transaction, error) {
	return _Verify.contract.Transact(opts, "verifyDocuments", ipfs, _status)
}

// VerifyDocuments is a paid mutator transaction binding the contract method 0xfb63030c.
//
// Solidity: function verifyDocuments(string ipfs, uint8 _status) payable returns()
func (_Verify *VerifySession) VerifyDocuments(ipfs string, _status uint8) (*types.Transaction, error) {
	return _Verify.Contract.VerifyDocuments(&_Verify.TransactOpts, ipfs, _status)
}

// VerifyDocuments is a paid mutator transaction binding the contract method 0xfb63030c.
//
// Solidity: function verifyDocuments(string ipfs, uint8 _status) payable returns()
func (_Verify *VerifyTransactorSession) VerifyDocuments(ipfs string, _status uint8) (*types.Transaction, error) {
	return _Verify.Contract.VerifyDocuments(&_Verify.TransactOpts, ipfs, _status)
}
